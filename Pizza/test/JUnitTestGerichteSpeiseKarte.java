import de.thb.fim.pizzaPronto.datenobjekte.DessertVO;import de.thb.fim.pizzaPronto.datenobjekte.PastaVO;import de.thb.fim.pizzaPronto.datenobjekte.PizzaVO;import de.thb.fim.pizzaPronto.datenobjekte.SpeiseKarte;import org.junit.BeforeClass;import org.junit.Test;import java.lang.reflect.Field;import java.lang.reflect.Modifier;import static org.junit.Assert.assertEquals;import static org.junit.Assert.assertTrue;/** * de.thb.fim.pizzaPronto.datenobjekte.GerichtVO, de.thb.fim.pizzaPronto.datenobjekte.PastaVO, de.thb.fim.pizzaPronto.datenobjekte.PizzaVO und Dessert werden getestet. *  * Zum Testen werden spezielle Assert-Befehle und Reflektion-API eingesetzt <br> *  * @author Gabriele Schmidt * @version 1.0 11.05.2015 */public class JUnitTestGerichteSpeiseKarte {		private static Class<SpeiseKarte> mySpeisekarteClass;	private static Field ANZ_GERICHTE;	private static int modifiersANZ_GERICHTE;	private static Field speisen;				@BeforeClass	public static void setUpBeforeClass() throws Exception {				mySpeisekarteClass = SpeiseKarte.class;		ANZ_GERICHTE = mySpeisekarteClass.getDeclaredField("ANZ_GERICHTE");		modifiersANZ_GERICHTE = ANZ_GERICHTE.getModifiers();				speisen = mySpeisekarteClass.getDeclaredField("speisen");					}		@Test	public void isFinalANZ_GERICHTESpeiseKarte() {		assertTrue("ANZ_GERICHTE in de.thb.fim.pizzaPronto.datenobjekte.SpeiseKarte ist eine konstante Klassenvariable", Modifier.isFinal(modifiersANZ_GERICHTE));	}		@Test	public void isStaticANZ_GERICHTESpeiseKarte() {		assertTrue("ANZ_GERICHTE in de.thb.fim.pizzaPronto.datenobjekte.SpeiseKarte ist eine Klassenvariable", Modifier.isStatic(modifiersANZ_GERICHTE));	}		@Test	public void isPrivateANZ_GERICHTESpeiseKarte() {		assertTrue("ANZ_GERICHTE in de.thb.fim.pizzaPronto.datenobjekte.SpeiseKarte ist eine private Klassenvariable", Modifier.isPrivate(modifiersANZ_GERICHTE));	}			@Test	public void testgetAnzGerichte_18SpeiseKarte() {		assertEquals("Methode getAnzGerichte in de.thb.fim.pizzaPronto.datenobjekte.SpeiseKarte mit Wert 18", 18, new SpeiseKarte().getAnzGerichte());	}		@Test	public void testSpeisenDatentypSpeiseKarte() {		assertTrue("Speisen in de.thb.fim.pizzaPronto.datenobjekte.SpeiseKarte ist Array und vom Typ de.thb.fim.pizzaPronto.datenobjekte.GerichtVO", speisen.getType().toString().equals("class [LGerichtVO;"));	}		@Test	public void testPizzaVONummer() {		int nummer = 30;		PizzaVO pizza = new PizzaVO(nummer, "Popeye", new String[] { "Schinken",				"Spinat", "Champignon", "Ei" }, 8.90f, 2);		assertEquals("Nummer der Pizza",nummer,pizza.getNummer());	}		@Test	public void testPizzaVOGroesse() {		int groesse = 2;		PizzaVO pizza = new PizzaVO(30, "Popeye", new String[] { "Schinken",				"Spinat", "Champignon", "Ei" }, 8.90f, groesse);		assertEquals("Groesse der Pizza", groesse,pizza.getGroesse());	}		@Test	public void testPizzaVOGerichtnummer() {		int nummer = 30;		int groesse = 2;		int gerichtnummer = nummer * 10 + groesse;		PizzaVO pizza = new PizzaVO(nummer, "Popeye", new String[] { "Schinken",				"Spinat", "Champignon", "Ei" }, 8.90f, groesse);		assertEquals("Gerichtnummer der Pizza", gerichtnummer,pizza.getGerichtNummer());	}		@Test	public void testPizzaVOName() {		String name =  "Popeye";		PizzaVO pizza = new PizzaVO(30, name, new String[] { "Schinken",				"Spinat", "Champignon", "Ei" }, 8.90f, 2);		assertEquals("Name der Pizza", name,pizza.getName());	}		@Test	public void testPizzaVOGerichtName() {		String name =  "Popeye";		PizzaVO pizza = new PizzaVO(30, name, new String[] { "Schinken",				"Spinat", "Champignon", "Ei" }, 8.90f, 2);		assertTrue("Gerichtname der Pizza",pizza.getGerichtName().contains(name));		assertTrue("Gerichtname der Pizza",pizza.getGerichtName().contains("Grande"));		assertTrue("Gerichtname der Pizza",pizza.getGerichtName().contains("Pizza"));	}			@Test	public void testPastaVONummer() {		int nummer = 12;		PastaVO pasta =new PastaVO(nummer, "Bolognese",				new String[] { "Hackfleischsauce" }, 6.40f, 4);		assertEquals("Nummer der Pasta",nummer,pasta.getNummer());	}		@Test	public void testPastaVOSorte() {		int sorte = 4;		PastaVO pasta =new PastaVO(12, "Bolognese",				new String[] { "Hackfleischsauce" }, 6.40f, sorte);		assertEquals("Sorte der Pasta", sorte,pasta.getPastaSorte());	}		@Test	public void testPastaVOGerichtnummer() {		int nummer = 12;		int sorte = 4;		int gerichtnummer = sorte * 100 + nummer;		PastaVO pasta =new PastaVO(nummer, "Bolognese",				new String[] { "Hackfleischsauce" }, 6.40f, sorte);		assertEquals("Gerichtnummer der Pasta", gerichtnummer,pasta.getGerichtNummer());	}		@Test	public void testPastaVOName() {		String name =  "Bolognese";		PastaVO pasta =new PastaVO(12, name,				new String[] { "Hackfleischsauce" }, 6.40f, 4);		assertEquals("Name der Pasta", name,pasta.getName());	}		@Test	public void testPastaVOGerichtName() {		String name =  "Bolognese";		PastaVO pasta =new PastaVO(12, name,				new String[] { "Hackfleischsauce" }, 6.40f, 4);		assertTrue("Gerichtname der Pasta",pasta.getGerichtName().contains(name));		assertTrue("Gerichtname der Pasta",pasta.getGerichtName().contains("Spaghetti"));		assertTrue("Gerichtname der Pasta",pasta.getGerichtName().contains("Pasta"));	}		@Test	public void testDessertVONummer() {		int nummer = 12;		DessertVO dessert = new DessertVO(nummer, "Hausgemachter Obstsalat", 2.30f);		assertEquals("Nummer des Desserts",nummer,dessert.getNummer());	}				@Test	public void testDessertVOGerichtnummer() {		DessertVO dessert = new DessertVO(21, "Hausgemachter Obstsalat", 2.30f);		assertEquals("Gerichtnummer des Desserts ist gleich seiner Nummer",dessert.getNummer(), dessert.getGerichtNummer());	}		@Test	public void testDessertVOName() {		String name =  "Hausgemachter Obstsalat";		DessertVO dessert = new DessertVO(21, name, 2.30f);		assertEquals("Name des Desserts", name,dessert.getName());	}		@Test	public void testDessertVOGerichtName() {		String name =  "Hausgemachter Obstsalat";		DessertVO dessert = new DessertVO(21, name, 2.30f);		assertTrue("Gerichtname des Desserts",dessert.getGerichtName().contains(name));	}	}